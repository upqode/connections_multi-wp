{"version":3,"sources":["js/navigation.js"],"names":["siteNavigation","document","getElementById","button","getElementsByTagName","menu","classList","contains","display","toggle","getAttribute","setAttribute","event","target","addEventListener","remove","isClickInside","_step","links","_iterator","_createForOfIteratorHelper","s","n","done","link","value","toggleFocus","err","e","f","_step2","_iterator2","linksWithChildren","style","type","self","this","tagName","toLowerCase","parentNode","menuItem","preventDefault","_step3","_iterator3","children"],"mappings":"kpCAME,WACD,IAAMA,EAAiBC,SAASC,eAAgB,mBAGhD,GAAOF,EAAP,CAJC,IAAAG,EAAWH,EAAAI,qBAAA,UAAA,GAIZ,QAAK,IAAmBD,EAAxB,CAIA,IAAMA,EAAMH,EAAiBI,qBAAuB,MAArC,GAId,QAAA,IAAAC,EAAA,CAMIA,EAAAC,UAAgBC,SAArB,aACCJ,EAAAA,UAAaK,IAAAA,YAIdL,EAAOE,iBAAeE,QAAU,WAC/BF,EAAKC,UAAeG,OAApB,WAOgD,SAA3CN,EAAOO,aAAc,iBACzBP,EAAOQ,aAAc,gBAAiB,SAHvCX,EAAAA,aAAeM,gBAAkB,UAKhCH,SAAAA,iBAAqB,QAAA,SAAiBS,GACtCZ,EAAAO,SAAAK,EAAAC,UAIFZ,EAASa,UAAkBC,OAA3B,WACCZ,EAAMa,aAAgBhB,gBAAeO,YAKpC,IA7CUU,EA6CVC,EAAAb,EAAAD,qBAAA,KAIIc,EAAad,EAAAA,iBAEnB,4DAnDYe,EAAAC,2BAuDQF,GAvDR,IAuDZ,IAAAC,EAAAE,MAAAJ,EAAAE,EAAAG,KAAAC,MAA4B,CAAA,IAAhBC,EAAgBP,EAAAQ,MAvDhBD,EAAAV,iBAAA,QAAAY,GAuDQR,GAvDRM,EAAAV,iBAAA,OAAAY,GAAA,IAAA,MAAAC,GAAAR,EAAAS,EAAAD,GAAA,QAAAR,EAAAU,IAAA,IAAAC,EAAAC,EAAAX,2BAuDgBY,GAvDhB,IAuDgB,IAAAD,EAAAV,MAAAS,EAAAC,EAAAT,KAAAC,MAAA,CAAAO,EAAAL,MAC3BD,iBAAKV,aAA2BY,GAAa,IAxDlC,MAAAC,GAAAI,EAAAH,EAAAD,GAAA,QAAAI,EAAAF,UAaX1B,EAAA8B,MAAAzB,QAAA,QAbW,SAAAkB,IAAA,GAAA,UAAAd,MAAAsB,MAAA,SAAAtB,MAAAsB,KAAA,IAAA,IAAAC,EAAAC,MAAAD,EAAA7B,UAAAC,SAAA,aA0EJ,OAAS4B,EAAKE,QAAQC,eA1ElBH,EAAA7B,UAAAG,OAAA,SA6D4B0B,EAA5BX,EAA4Be,WAIxC,GAAA,eAAA3B,MAAAsB,KAAA,CAiBE,IAAMM,EAAWJ,KAAKG,WACtB3B,MAAM6B,iBAlBR,IAAAC,EAAAC,EAAAvB,2BAmBsBoB,EAASD,WAAWK,UAnB1C,IAmBE,IAAAD,EAAAtB,MAAAqB,EAAAC,EAAArB,KAAAC,MAAmD,CAAA,IAAvCC,EAAuCkB,EAAAjB,MApFzCe,IAAAhB,GAAAA,EAAAlB,UAAAS,OAAA,UAiEZ,MAAAY,GAAAgB,EAAAf,EAAAD,GAAA,QAAAgB,EAAAd,IAjEYW,EAAAlC,UAAAG,OAAA,WAAX","file":"navigation.min.js","sourcesContent":["/**\n * File navigation.js.\n *\n * Handles toggling the navigation menu for small screens and enables TAB key\n * navigation support for dropdown menus.\n */\n( function() {\n\tconst siteNavigation = document.getElementById( 'site-navigation' );\n\n\t// Return early if the navigation don't exist.\n\tif ( ! siteNavigation ) {\n\t\treturn;\n\t}\n\n\tconst button = siteNavigation.getElementsByTagName( 'button' )[ 0 ];\n\n\t// Return early if the button don't exist.\n\tif ( 'undefined' === typeof button ) {\n\t\treturn;\n\t}\n\n\tconst menu = siteNavigation.getElementsByTagName( 'ul' )[ 0 ];\n\n\t// Hide menu toggle button if menu is empty and return early.\n\tif ( 'undefined' === typeof menu ) {\n\t\tbutton.style.display = 'none';\n\t\treturn;\n\t}\n\n\tif ( ! menu.classList.contains( 'nav-menu' ) ) {\n\t\tmenu.classList.add( 'nav-menu' );\n\t}\n\n\t// Toggle the .toggled class and the aria-expanded value each time the button is clicked.\n\tbutton.addEventListener( 'click', function() {\n\t\tsiteNavigation.classList.toggle( 'toggled' );\n\n\t\tif ( button.getAttribute( 'aria-expanded' ) === 'true' ) {\n\t\t\tbutton.setAttribute( 'aria-expanded', 'false' );\n\t\t} else {\n\t\t\tbutton.setAttribute( 'aria-expanded', 'true' );\n\t\t}\n\t} );\n\n\t// Remove the .toggled class and set aria-expanded to false when the user clicks outside the navigation.\n\tdocument.addEventListener( 'click', function( event ) {\n\t\tconst isClickInside = siteNavigation.contains( event.target );\n\n\t\tif ( ! isClickInside ) {\n\t\t\tsiteNavigation.classList.remove( 'toggled' );\n\t\t\tbutton.setAttribute( 'aria-expanded', 'false' );\n\t\t}\n\t} );\n\n\t// Get all the link elements within the menu.\n\tconst links = menu.getElementsByTagName( 'a' );\n\n\t// Get all the link elements with children within the menu.\n\tconst linksWithChildren = menu.querySelectorAll( '.menu-item-has-children > a, .page_item_has_children > a' );\n\n\t// Toggle focus each time a menu link is focused or blurred.\n\tfor ( const link of links ) {\n\t\tlink.addEventListener( 'focus', toggleFocus, true );\n\t\tlink.addEventListener( 'blur', toggleFocus, true );\n\t}\n\n\t// Toggle focus each time a menu link with children receive a touch event.\n\tfor ( const link of linksWithChildren ) {\n\t\tlink.addEventListener( 'touchstart', toggleFocus, false );\n\t}\n\n\t/**\n\t * Sets or removes .focus class on an element.\n\t */\n\tfunction toggleFocus() {\n\t\tif ( event.type === 'focus' || event.type === 'blur' ) {\n\t\t\tlet self = this;\n\t\t\t// Move up through the ancestors of the current link until we hit .nav-menu.\n\t\t\twhile ( ! self.classList.contains( 'nav-menu' ) ) {\n\t\t\t\t// On li elements toggle the class .focus.\n\t\t\t\tif ( 'li' === self.tagName.toLowerCase() ) {\n\t\t\t\t\tself.classList.toggle( 'focus' );\n\t\t\t\t}\n\t\t\t\tself = self.parentNode;\n\t\t\t}\n\t\t}\n\n\t\tif ( event.type === 'touchstart' ) {\n\t\t\tconst menuItem = this.parentNode;\n\t\t\tevent.preventDefault();\n\t\t\tfor ( const link of menuItem.parentNode.children ) {\n\t\t\t\tif ( menuItem !== link ) {\n\t\t\t\t\tlink.classList.remove( 'focus' );\n\t\t\t\t}\n\t\t\t}\n\t\t\tmenuItem.classList.toggle( 'focus' );\n\t\t}\n\t}\n}() );\n"]}